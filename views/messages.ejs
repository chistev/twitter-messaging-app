<%- include('base', { title: 'Messages', body: body }) %>

<body class="text-white" style="background-color: #000000;">
    <div class="container-fluid min-vh-100 d-flex flex-column" style="width: 80%;">
        <div class="row flex-grow-1">
          <div class="col-md-4 border-right">
            <div class="p-3">
              <div class="d-flex align-items-center justify-content-between">
                <h3 style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 700; font-size: 20px; line-height: 24px; color: #e7e9ea;">Messages</h3>
                <div class="fs-6">
                  <i id="gear-icon" class="bi bi-gear me-3" style="cursor: pointer;"></i>
                  <i class="bi bi-envelope-at"></i>
                </div>
              </div>
              
              <% if (!selectedUsers || selectedUsers.length === 0) { %>
                <br id="break-tag">
                <div id="welcome-message">
                  <h4 style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 800; font-size: 31px; line-height: 36px; color: #e7e9ea;">Welcome to your inbox!</h4>
                  <p style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 400; font-size: 15px; line-height: 20px; color: #71767b;">Search for a user and have private conversations with them.</p>
                  <button class="btn p-3" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 700; font-size: 17px; line-height: 20px; color: #ffffff; background-color: #1d9bf0; border-radius: 50px;">Write a message</button>
                </div>
              <% } else { %>
                <div id="selected-users" class="p-2" style="display: block;">
                  <div class="p-2 mb-1">
                    <div class="direct-search-input-container">
                      <i class="bi bi-search me-2"></i>
                      <input type="text" class="form-control direct-search-input" placeholder="Search Direct Messages">
                    </div>
                  </div>
                  <% selectedUsers.forEach(function(user) { %>
                    <div class="user-container d-flex align-items-center justify-content-between mb-3 p-2" style="background-color:#202327;">
                      <div class="d-flex align-items-center">
                        <div class="me-3">
                          <img src="" alt="<%= user.username %>" class="rounded-circle" style="width: 40px; height: 40px;">
                        </div>
                        <div>
                          <span class="d-block" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 500; font-size: 15px; line-height: 20px; color: #e7e9ea;">@<%= user.username %></span>
                        </div>
                      </div>
                      <div class="three-dots-icon-container">
                        <i class="bi bi-three-dots" data-bs-toggle="modal" data-bs-target="#optionsModal"></i>
                      </div>
                    </div>
                  <% }) %>
                </div>
              <% } %>
            </div>
          </div>
          
            <div id="content-column" class="col-md-8 border-right d-flex flex-column align-items-center justify-content-center">
                <div class="p-3 text-center">
                    <h3 style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 800; font-size: 31px; line-height: 36px; color: #e7e9ea;">Select a message</h3>
                    <p style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 400; font-size: 15px; line-height: 20px; color: #71767b;">Choose from your existing conversations, or start a new one.</p>
                    <button class="btn p-3" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 700; font-size: 17px; line-height: 20px; color: #ffffff; background-color: #1d9bf0; border-radius: 50px;">New message</button>
                </div>
            </div>
        </div>
    </div>
<div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content text-white" style="background-color: #000000;">
      <div class="modal-header border-0 d-flex justify-content-between">
        <div class="d-flex justify-content-center align-items-center">
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            <div>
                <h5 class="modal-title ms-5" id="messageModalLabel" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 700; font-size: 20px; line-height: 24px; color: #ffffff;">New message</h5>
            </div>
        </div>
            <div>
                <button type="button" class="btn" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, Helvetica, sans-serif; font-weight: 700; font-size: 15px; line-height: 20px; color: #0f1419; background-color: #787a7a; border-radius: 50px;" data-bs-dismiss="modal">Next</button>
            </div>
      </div>
      <div class="modal-body">
        <div class="input-group d-flex align-items-center">
            <span class="input-group-text bg-transparent border-0 ">
                <i class="bi bi-search search-icon mb-3" style="color: #ffffff;"></i>
            </span>
            <input type="text" class="form-control mb-3 search-input" placeholder="Search people" style="background-color: transparent; border: none; box-shadow: none; color: #ffffff; caret-color: #ffffff; opacity: 1; /* Firefox */ color: #e7e9ea;">
        </div>
        <hr>
        <div id="user-results"></div>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap Modal for the three dots -->
<div class="modal fade" id="optionsModal" tabindex="-1" aria-labelledby="optionsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body">
        <ul class="list-unstyled mb-0">
          <li class="p-2"><i class="bi bi-pin"></i> Pin conversation</li>
          <li class="p-2"><i class="bi bi-bell-slash"></i> Snooze conversation</li>
          <li class="p-2"><i class="bi bi-flag"></i> Report conversation</li>
          <li class="p-2 text-danger"><i class="bi bi-trash"></i> Delete conversation</li>
        </ul>
      </div>
    </div>
  </div>
</div>

    <script>
        document.getElementById('gear-icon').addEventListener('click', function() {
            // Change the URL without reloading the page
            history.pushState(null, '', '/messages/settings');
            
            // Replace the column content
            const newContent = `
                <div class="p-3">
                    <div class="d-flex">
                        <div>
                            <i class="bi bi-arrow-left fs-4" id="back-icon" style="cursor: pointer;"></i>
                        </div>
                        <div>
                            <h3 class="mb-5 ms-5" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; font-weight: 800; font-size: 31px; line-height: 36px; color: #e7e9ea;">Direct Messages</h3>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; font-weight: 400; font-size: 15px; line-height: 20px; color: #e7e9ea;">Show read receipts</div>
                        </div>
                        <div>
                            <input type="checkbox" name="read-receipts" value="read-receipts">
                        </div>
                    </div>
                    <div>Let people you’re messaging with know when you’ve seen their messages.</div>
                </div>
            `;
            const contentColumn = document.getElementById('content-column');
            contentColumn.innerHTML = newContent;
            contentColumn.classList.remove('d-flex', 'flex-column', 'align-items-center', 'justify-content-center');

            // Add event listener to back icon
            document.getElementById('back-icon').addEventListener('click', function() {
                history.pushState(null, '', '/messages');
                location.reload();
            });
        });

        // Handle browser back/forward button
        window.addEventListener('popstate', function(event) {
            if (location.pathname === '/messages/settings') {
                document.getElementById('gear-icon').click();
            } else {
                location.reload();
            }
        });

        // Initial load based on URL
        if (location.pathname === '/messages/settings') {
            document.getElementById('gear-icon').click();
        }
    </script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const modal = new bootstrap.Modal(document.getElementById('messageModal'));
        const body = document.querySelector('body');
    
        // Function to change background color
        function changeBackgroundColor(color) {
            body.style.backgroundColor = color;
        }
    
        // Show modal and change background color
        document.querySelector('.bi-envelope-at').addEventListener('click', function() {
            changeBackgroundColor('#242d34'); // Change background color
            modal.show();
        });
    
        // Hide modal and revert background color
        modal._element.addEventListener('hidden.bs.modal', function() {
            changeBackgroundColor('#000000'); // Revert background color
        });
    
        // Additional event listeners for buttons that open the modal
        document.querySelectorAll('.btn').forEach(button => {
            if (button.textContent.trim() === 'Write a message' || button.textContent.trim() === 'New message') {
                button.addEventListener('click', function() {
                    changeBackgroundColor('#242d34'); // Change background color
                    modal.show();
                });
            }
        });
    });
    </script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.querySelector('.search-input');
        const searchIcon = document.querySelector('.search-icon');

        console.log('Search Input:', searchInput);
        console.log('Search Icon:', searchIcon);

        if (searchInput && searchIcon) {
            searchInput.addEventListener('focus', function () {
                console.log('Input focused');
                searchIcon.style.color = '#1677b8';
            });

            searchInput.addEventListener('blur', function () {
                console.log('Input blurred');
                searchIcon.style.color = '#ffffff'; 
            });
        } else {
            console.error('Search input or icon not found');
        }
    });
</script>
    
<script>
    document.addEventListener('DOMContentLoaded', function () {
      const searchInput = document.querySelector('.search-input');
      const userResults = document.getElementById('user-results');
      const welcomeMessage = document.getElementById('welcome-message');
      const selectedUsersContainer = document.getElementById('selected-users'); // Updated: Container for selected users
      const selectedUserName = document.getElementById('selected-user-name');
      const breakTag = document.getElementById('break-tag');
      const currentUserId = '<%= user.id %>'; // Assuming the current user's ID is available in the EJS template

      console.log('DOM fully loaded and parsed');
      console.log('Elements:', {
            searchInput,
            userResults,
            welcomeMessage,
            selectedUsersContainer, // Updated: Logging selected users container
            selectedUserName,
            breakTag,
            currentUserId
        });
  
      searchInput.addEventListener('input', async function () {
        const query = searchInput.value;
        console.log('Search input:', query);
        if (query.length > 0) {
          const response = await fetch(`/api/users?username=${query}`);
          const users = await response.json();
          renderUsers(users);
        } else {
          userResults.innerHTML = '';
        }
      });
  
      function renderUsers(users) {
      userResults.innerHTML = users.map(user => `
        <div class="user-result d-flex align-items-center mb-3">
          <a href="" class="me-3 user-link" data-username="${user.username}" data-user-id="${user._id}">
            <img src="" alt="${user.username}" class="rounded-circle" style="width: 40px; height: 40px;">
          </a>
          <a href="" class="text-decoration-none text-white user-link" data-username="${user.username}" data-user-id="${user._id}">
            <span class="d-block">${user.username}</span>
          </a>
        </div>
      `).join('');
    

    // Add event listeners to each user link
    document.querySelectorAll('.user-link').forEach(link => {
          link.addEventListener('click', function (event) {
            event.preventDefault();
            const username = event.currentTarget.getAttribute('data-username');
            const userId = event.currentTarget.getAttribute('data-user-id');
            console.log('User link clicked:', { username, userId });
            saveSelectedUser(currentUserId, userId, username);
          });
        });
      }
      
      async function saveSelectedUser(currentUserId, selectedUserId, username) {
        console.log('Saving selected user:', { currentUserId, selectedUserId, username });

        try {
        const response = await fetch('/api/select-user', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'CSRF-Token': '<%= csrfToken %>'
          },
          body: JSON.stringify({ userId: currentUserId, selectedUserId })
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        console.log('Selected user saved successfully');



        // Update the UI
        const selectedUserElement = `
          <div class="user-container d-flex align-items-center justify-content-between mb-3 p-2" style="background-color:#202327;">
            <div class="d-flex align-items-center">
              <div class="me-3">
                <img src="" alt="${username}" class="rounded-circle" style="width: 40px; height: 40px;">
              </div>
              <div>
                <span class="d-block" style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; font-weight: 500; font-size: 15px; line-height: 20px; color: #e7e9ea;">@${username}</span>
              </div>
            </div>
            <div class="three-dots-icon-container">
              <i class="bi bi-three-dots"></i>
            </div>
          </div>
        `;

        // Append the selected user to the container
        selectedUsersContainer.insertAdjacentHTML('beforeend', selectedUserElement);

        if (welcomeMessage) {
          welcomeMessage.innerHTML = '';
        }
        if (selectedUserContainer) {
          selectedUserContainer.style.display = 'block';
        }
        if (breakTag) {
          breakTag.style.display = 'none';
        }
        if (selectedUserName) {
          selectedUserName.textContent = "@" + username;
        }
      } catch (error) {
        console.error('Error saving selected user:', error);
      }
    }
  });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.user-container').forEach(function(container) {
    container.addEventListener('click', function() {
      const iconContainer = container.querySelector('.three-dots-icon-container');
      if (iconContainer.style.display === 'block') {
        iconContainer.style.display = 'none';
      } else {
        iconContainer.style.display = 'block';
      }
    });
  });
});

  </script>
</body>

